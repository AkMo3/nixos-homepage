[% WRAPPER layout.tt title="Overview" handlesLayout=1 %]

<div class="page-title">
  <h1>Overview</h1>
</div>

<section class="overview-benefits">

  <div>
    [% PROCESS svg path="site-styles/assets/gfx-overview-cloud.svg" %]
    <div>
      <h2>Stop looking for what is missing. Let Nix remind you.</h2>
      <p>
        Makes sure nothing gets left behind and reduces the risk of incomplete
        dependencies. Stop worrying if all dependencies are in order. Let Nix
        remind you about the missing pieces.
      </p>
      <div>
        <strong>Complete dependencies</strong> are ...

        Nix ensures that that package dependency specifications are complete.

        Under Nix, a build process will only find resources that have been
        declared explicitly as dependencies. There's no way it can build until
        everything it needs has been correctly declared. If it builds, you will
        know you've provided a complete declaration.

        Once a build is complete, ongoing runtime dependencies are detected
        automatically
      </div>
    </div>
  </div>

  <div>
    [% PROCESS svg path="site-styles/assets/gfx-overview-looking.svg" %]
    <div>
      <h2>
        Patches? Custom changes? The sky is the limit.
      </h2>
      <p>
        Completely customisable build tool. Get the power to adjust any part of the build environment. All changes are
        transparent and Nix keeps it that way.
      </p>
      <div>
        transparent source binary model
      </div>
    </div>
  </div>

  <div>
    [% PROCESS svg path="site-styles/assets/gfx-overview-gears.svg" %]
    <div>
      <h2>
        Multiple development environments. No conflicts with the operating system.
      </h2>
      <p>
        Securely install software with no risk of breaking anything down. Nix prevents conflicts not only between
        multiple environments, but also with the operating system. All packages remain installed side-by-side even if
        different users install packages with the conflicting dependencies.
      </p>
      <div>
        explain /nix/store
      </div>
    </div>
  </div>

  <div>
    [% PROCESS svg path="site-styles/assets/gfx-overview-gears.svg" %]
    <div>
      <h2>
        Leave nothing behind. Instantly upgrade.
      </h2>
      <p>
        To eliminate the risk of leaving any parts behind, all operations are atomic. Nix sets everything in place and
        once ready, there are only two possible outcomes. Upgrade was successful or upgrade did not happen.
      </p>
      <div>
        link farm
      </div>
    </div>
  </div>

  <div>
    [% PROCESS svg path="site-styles/assets/gfx-overview-gears.svg" %]
    <div>
      <h2>
        Is the previous version better? Rollback anytime.
      </h2>
      <p>
        Packages are never overwritten, and old versions are always stored. Roll back to any previous version within
        milliseconds. Yes, again with the trustworthy atomic operation.
      </p>
      <div>
        profiles, generations, garbage collection
      </div>
    </div>
  </div>

  <div>
    [% PROCESS svg path="site-styles/assets/gfx-overview-gears.svg" %]
    <div>
      <h2>
        Be carefree. Develop with no limits.
      </h2>
      <p>
        Gives you the power to build and deploy software consistently on different machines. Save time, be carefree
        and
        rollback anytime to the previous version. Nix will make sure all dependencies are in place.
      </p>
      <div>
        reproducibility
      </div>
    </div>
  </div>

  <div>
    [% PROCESS svg path="site-styles/assets/gfx-overview-gears.svg" %]
    <div>
      <h2>
        Simplify your development workflow. Use Nix.
      </h2>
      <p>
        Keep it simple and develop with a language agnostic tool/package manager. Focus on the work and do not lose
        time
        with multiple tools/package managers.
      </p>
      <div>
        Language agnostic
      </div>
    </div>
  </div>

  <div>
    [% PROCESS svg path="site-styles/assets/gfx-overview-gears.svg" %]
    <div>
      <h2>
        No surprises. Trust in your deployments.
      </h2>
      <p>
        Surprises only belong to birthdays, not deployments. Explain, why we trust in deployments, why are there no
        surprises?Boost efficiency with declarative configuration. Shorten development cycles and solve problems
        faster.
        All that in a truly all-inclusive build environment: NixOS.
      </p>
      <div>
        declarative configuration / NixOS
      </div>
    </div>
  </div>

  <div>
    [% PROCESS svg path="site-styles/assets/gfx-overview-gears.svg" %]
    <div>
      <h2>
        Move fast and fix things: quickly discover bugs.
      </h2>
      <p>
        Want to boost productivity? Choose a conflict-free development environment. With Nix there are two results:
        the
        code either works or fails always in the same way. Discover bugs faster and focus on reproducing.
      </p>
      <div>
        patching, reproducibility
      </div>
    </div>
  </div>

</section>

[% END %]
